{
  "address": "0x900d92B40C8388B102f58eB84C4c21C783832066",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__UnAuthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__Unexpected",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "AmountToAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x2c079f80950bd2c4737faea546e9b980667b9eb15aac1fbfe650e551f9f1b48a",
  "receipt": {
    "to": null,
    "from": "0x773751B731a417e3f52Db2400BD480DB41AE5A2B",
    "contractAddress": "0x900d92B40C8388B102f58eB84C4c21C783832066",
    "transactionIndex": 7,
    "gasUsed": "843167",
    "logsBloom": "0x
    "blockHash": "0x5b14bfe094c5a5dbdb5dc11e947d3fca46d5e3177e7d1b3b1eeb3ed5ef7cb8d8",
    "transactionHash": "0x2c079f80950bd2c4737faea546e9b980667b9eb15aac1fbfe650e551f9f1b48a",
    "logs": [],
    "blockNumber": 4252627,
    "cumulativeGasUsed": "3176035",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 2,
  "solcInputHash": "f2e855de1a515fcb8666ae30f910d818",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__UnAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__Unexpected\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"AmountToAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Fahad Salamat Randhawa\",\"details\":\"This uses price feed from chainlink to get token/ether value\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A crowd funding contract, accepts ether\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This is a sample for web3 portfolio\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__UnAuthorized();\\nerror FundMe__Unexpected();\\n\\n/**\\n * @title A crowd funding contract, accepts ether\\n * @author Fahad Salamat Randhawa\\n * @notice This is a sample for web3 portfolio\\n * @dev This uses price feed from chainlink to get token/ether value\\n */\\n\\ncontract FundMe {\\n    using PriceConverter for uint;\\n\\n    address public immutable i_owner; //assign-able once\\n    uint public constant MINIMUM_USD = 5 * 1e18; //gas efficient\\n    address[] public funders;\\n    mapping(address => uint) public AmountToAddress;\\n\\n    AggregatorV3Interface public immutable priceFeed;\\n\\n    constructor(address _priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(_priceFeedAddress);\\n    }\\n\\n    modifier verifyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert FundMe__UnAuthorized();\\n        }\\n\\n        //execute rest of code if require validates\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function withdraw() external verifyOwner {\\n        address[] memory m_funders = funders;\\n        for (\\n            uint fundersIndex = 0;\\n            fundersIndex < m_funders.length;\\n            fundersIndex++\\n        ) {\\n            AmountToAddress[m_funders[fundersIndex]] = 0;\\n        }\\n        //refresh funders list\\n        funders = new address[](0);\\n\\n        //transfer all balance from this contract to msg.sender, no gas limit\\n        (bool success, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        if (!success) {\\n            revert FundMe__Unexpected();\\n        }\\n    }\\n\\n    function fund() public payable {\\n        //convert Ether to USD\\n        require(\\n            msg.value.conversion(priceFeed) >= MINIMUM_USD,\\n            \\\"Send minimum $5\\\"\\n        );\\n\\n        //keep record of funders\\n        funders.push(msg.sender);\\n        AmountToAddress[msg.sender] += msg.value;\\n    }\\n}\\n\",\"keccak256\":\"0xb97a180c5da44c5540f241bc5e225e7214e2820b30793377b603f5ae1d69b61d\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function conversion(\\r\\n        uint _amount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint) {\\r\\n        (, int answer, , , ) = priceFeed.latestRoundData();\\r\\n        return ((uint(answer * 1e10) * _amount) / 1e18);\\r\\n    }\\r\\n\\r\\n    function conversionRate(\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) public view returns (uint) {\\r\\n        (, int answer, , , ) = priceFeed.latestRoundData();\\r\\n        return uint(answer * 1e10);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x551287a6602bf986fedbb0d18d6ce1547a512f42ded859833687acffce4f56fd\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063b60d42881161004e578063b60d4288146100fa578063cba25fdc14610104578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780636b69a592146100a4578063741bef1a146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e1565b005b3480156100b057600080fd5b506100b9610576565b6040516100c691906107a0565b60405180910390f35b3480156100db57600080fd5b506100e4610582565b6040516100f1919061083a565b60405180910390f35b6101026101a9565b005b34801561011057600080fd5b5061012b60048036038101906101269190610898565b6105a6565b60405161013891906107a0565b60405180910390f35b34801561014d57600080fd5b506101566105be565b60405161016391906108d4565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e919061091b565b6105e2565b6040516101a091906108d4565b60405180910390f35b674563918244f400006101e57f00000000000000000000000000000000000000000000000000000000000000003461062190919063ffffffff16565b1015610226576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021d906109a5565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d891906109f4565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610366576040517f317aeb7300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156103e957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161039f575b5050505050905060005b815181101561046e5760006001600084848151811061041557610414610a4a565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061046690610a79565b9150506103f3565b50600067ffffffffffffffff81111561048a57610489610ac2565b5b6040519080825280602002602001820160405280156104b85781602001602082028036833780820191505090505b50600090805190602001906104ce9291906106e0565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f590610b22565b60006040518083038185875af1925050503d8060008114610532576040519150601f19603f3d011682016040523d82523d6000602084013e610537565b606091505b5050905080610572576040517f7f7205b200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b674563918244f4000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081815481106105f257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561066a57600080fd5b505afa15801561067e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a29190610bc4565b505050915050670de0b6b3a7640000846402540be400836106c39190610c3f565b6106cd9190610d56565b6106d79190610ddf565b91505092915050565b828054828255906000526020600020908101928215610759579160200282015b828111156107585782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610700565b5b509050610766919061076a565b5090565b5b8082111561078357600081600090555060010161076b565b5090565b6000819050919050565b61079a81610787565b82525050565b60006020820190506107b56000830184610791565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108006107fb6107f6846107bb565b6107db565b6107bb565b9050919050565b6000610812826107e5565b9050919050565b600061082482610807565b9050919050565b61083481610819565b82525050565b600060208201905061084f600083018461082b565b92915050565b600080fd5b6000610865826107bb565b9050919050565b6108758161085a565b811461088057600080fd5b50565b6000813590506108928161086c565b92915050565b6000602082840312156108ae576108ad610855565b5b60006108bc84828501610883565b91505092915050565b6108ce8161085a565b82525050565b60006020820190506108e960008301846108c5565b92915050565b6108f881610787565b811461090357600080fd5b50565b600081359050610915816108ef565b92915050565b60006020828403121561093157610930610855565b5b600061093f84828501610906565b91505092915050565b600082825260208201905092915050565b7f53656e64206d696e696d756d2024350000000000000000000000000000000000600082015250565b600061098f600f83610948565b915061099a82610959565b602082019050919050565b600060208201905081810360008301526109be81610982565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ff82610787565b9150610a0a83610787565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a3f57610a3e6109c5565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a8482610787565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ab757610ab66109c5565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b0c600083610af1565b9150610b1782610afc565b600082019050919050565b6000610b2d82610aff565b9150819050919050565b600069ffffffffffffffffffff82169050919050565b610b5681610b37565b8114610b6157600080fd5b50565b600081519050610b7381610b4d565b92915050565b6000819050919050565b610b8c81610b79565b8114610b9757600080fd5b50565b600081519050610ba981610b83565b92915050565b600081519050610bbe816108ef565b92915050565b600080600080600060a08688031215610be057610bdf610855565b5b6000610bee88828901610b64565b9550506020610bff88828901610b9a565b9450506040610c1088828901610baf565b9350506060610c2188828901610baf565b9250506080610c3288828901610b64565b9150509295509295909350565b6000610c4a82610b79565b9150610c5583610b79565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610c9457610c936109c5565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610cd157610cd06109c5565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d0e57610d0d6109c5565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610d4b57610d4a6109c5565b5b828202905092915050565b6000610d6182610787565b9150610d6c83610787565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610da557610da46109c5565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610dea82610787565b9150610df583610787565b925082610e0557610e04610db0565b5b82820490509291505056fea264697066735822122061bf21e4c6bfba90a93234575a16da0a0ca398f442797d3d06b2b8f88b828f9c64736f6c63430008080033",
  "devdoc": {
    "author": "Fahad Salamat Randhawa",
    "details": "This uses price feed from chainlink to get token/ether value",
    "kind": "dev",
    "methods": {},
    "title": "A crowd funding contract, accepts ether",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This is a sample for web3 portfolio",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "AmountToAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}